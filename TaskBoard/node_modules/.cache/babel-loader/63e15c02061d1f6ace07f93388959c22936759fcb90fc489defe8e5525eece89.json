{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\KanbanBoard\\\\TaskBoard\\\\src\\\\components\\\\TaskBoard.js\",\n  _s = $RefreshSig$();\nimport { Login } from \"@mui/icons-material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { Alert, Box, Button, Grid, Paper, Popover, Snackbar, Typography } from \"@mui/material\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useAuth } from \"../utils/AuthContext\";\nimport { createTask, deleteTask, getTasks, updateTask } from \"../utils/api\"; // Import API functions\nimport DroppableTaskColumn from \"./DroppableTaskColumn\";\nimport TaskColumn from \"./TaskColumn\";\nimport TaskFilter from \"./TaskFilter\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = () => {\n  _s();\n  const {\n    logout\n  } = useAuth();\n  const [allTasks, setAllTasks] = useState([]);\n  const [filters, setFilters] = useState({\n    assignee: undefined,\n    status: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    reminderDate: \"\"\n  });\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [openTaskForm, setOpenTaskForm] = useState(false);\n  const [taskColumns, setTaskColumns] = useState([{\n    status: \"To Do\",\n    tasks: []\n  }, {\n    status: \"In Progress\",\n    tasks: []\n  }, {\n    status: \"Peer Review\",\n    tasks: []\n  }, {\n    status: \"Done\",\n    tasks: []\n  }]);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [reminder, setReminder] = useState(\"\");\n  const checkReminderDates = tasks => {\n    const now = new Date();\n    const reminderTasks = tasks.filter(task => task.reminderDate && new Date(task.reminderDate) <= now);\n    if (reminderTasks.length > 0) {\n      setOpenSnackbar(true);\n      setReminder(reminderTasks);\n    }\n  };\n\n  // Fetch tasks from API\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const tasks = await getTasks();\n        setAllTasks(tasks);\n        checkReminderDates(tasks);\n      } catch (error) {\n        console.error(\"Failed to fetch tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Update filtered tasks whenever all tasks or filters change\n  useEffect(() => {\n    filterTasks(filters);\n  }, [allTasks, filters]);\n\n  // Update task columns when filtered tasks change\n  useEffect(() => {\n    const updateColumnsTasks = () => {\n      setTaskColumns(prevColumns => prevColumns.map(column => ({\n        ...column,\n        tasks: filteredTasks.filter(task => task.status === column.status)\n      })));\n    };\n    updateColumnsTasks();\n  }, [filteredTasks]);\n  const handleOpenTaskForm = () => {\n    setOpenTaskForm(true);\n  };\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openPopover = Boolean(anchorEl);\n  const email = localStorage.getItem(\"email\");\n  const handleDeleteTask = useCallback(async taskId => {\n    try {\n      await deleteTask(taskId);\n      setAllTasks(prevTasks => prevTasks.filter(task => task._id !== taskId));\n    } catch (error) {\n      console.error(\"Failed to delete task:\", error);\n    }\n  }, []);\n  const handleAddTask = useCallback(async newTask => {\n    try {\n      const createdTask = await createTask(newTask);\n      setAllTasks(prevTasks => [...prevTasks, createdTask]);\n    } catch (error) {\n      console.error(\"Failed to add task:\", error);\n    }\n  }, []);\n  const handleUpdateTask = useCallback(async updatedTask => {\n    try {\n      const task = await updateTask(updatedTask);\n      setAllTasks(prevTasks => prevTasks.map(t => t._id === task._id ? task : t));\n    } catch (error) {\n      console.error(\"Failed to update task:\", error);\n    }\n  }, []);\n  const filterTasks = useCallback(filters => {\n    const {\n      assignee,\n      status,\n      priority,\n      dueDate,\n      reminderDate\n    } = filters;\n    const filtered = allTasks.filter(task => {\n      const assigneeLowerCase = assignee ? assignee.toLowerCase().trim().replace(/\\s/g, \"\") : \"\";\n      const taskAssignee = task.assignee ? task.assignee.toLowerCase().trim().replace(/\\s/g, \"\") : \"\";\n      const isAssigneeMatch = !assignee || taskAssignee.includes(assigneeLowerCase);\n      const isStatusMatch = !status || task.status === status || status === \"All\";\n      const isDueDateMatch = !dueDate || new Date(task.dueDate).toDateString() === new Date(dueDate).toDateString();\n      const isReminderDateMatch = !reminderDate || new Date(task.reminderDate).toDateString() === new Date(reminderDate).toDateString();\n      const isPriorityMatch = !priority || task.priority === priority || priority === \"All\";\n      return isAssigneeMatch && isStatusMatch && isPriorityMatch && isDueDateMatch && isReminderDateMatch;\n    });\n    setFilteredTasks(filtered);\n    setFilters(filters);\n  }, [allTasks]);\n  const handleDrop = (item, columnStatus) => {\n    const {\n      id,\n      sourceStatus\n    } = item;\n    if (sourceStatus !== columnStatus) {\n      onUpdateTask(id, columnStatus);\n    }\n  };\n  const onUpdateTask = async (taskId, newStatus) => {\n    const tasks = await getTasks();\n    setAllTasks(tasks);\n    const taskToUpdate = tasks.find(task => task._id === taskId);\n    if (taskToUpdate) {\n      handleUpdateTask({\n        ...taskToUpdate,\n        status: newStatus\n      });\n    }\n  };\n  const handlePersonIconClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  const handleLogout = () => {\n    logout();\n    // Redirect to login page, assuming you're using React Router\n    window.location.href = \"/login\";\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"100vh\",\n        paddingTop: \"2rem\",\n        marginLeft: \"2rem\",\n        marginRight: \"2rem\",\n        paddingBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: \"row\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Task Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PersonIcon, {\n          sx: {\n            backgroundColor: \"whitesmoke\",\n            padding: \"1rem\",\n            borderRadius: \"50px\",\n            fontSize: \"40px\",\n            cursor: \"pointer\"\n          },\n          onClick: handlePersonIconClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: openPopover,\n          anchorEl: anchorEl,\n          onClose: handlePopoverClose,\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\"\n          },\n          sx: {\n            marginTop: \"0.3rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleLogout,\n              sx: {\n                mt: 1\n              },\n              children: [\"Logout \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          backgroundColor: \"#0000\",\n          boxShadow: \"none\",\n          border: \"1px solid #fff\",\n          paddingX: \"2rem\",\n          paddingY: \"2rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexDirection: \"row\",\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            flexWrap: \"wrap\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TaskFilter, {\n            onFilter: filterTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleOpenTaskForm,\n            sx: {\n              margin: \"1rem\"\n            },\n            children: \"Add New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          open: openTaskForm,\n          onClose: () => setOpenTaskForm(false),\n          onSubmit: handleAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: taskColumns.map(({\n            status,\n            tasks\n          }) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(DroppableTaskColumn, {\n              status: status,\n              onDrop: handleDrop,\n              allTasks: allTasks,\n              children: /*#__PURE__*/_jsxDEV(TaskColumn, {\n                status: status,\n                bgcolor: status === \"To Do\" ? \"#D3D3D3\" : status === \"In Progress\" ? \"#fda63a\" : status === \"Done\" ? \"#74c365\" : \"#f88379\",\n                tasks: tasks,\n                onUpdateTask: handleUpdateTask,\n                onDeleteTask: handleDeleteTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this)\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openSnackbar,\n        autoHideDuration: 6000,\n        onClose: handleSnackbarClose,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleSnackbarClose,\n          severity: \"warning\",\n          sx: {\n            width: \"100%\"\n          },\n          children: [\"You have \", reminder.length, \" tasks with upcoming reminders!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskBoard, \"APZbJTi5to2dDOEBNzvlrk/0mIY=\", false, function () {\n  return [useAuth];\n});\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["Login","PersonIcon","Alert","Box","Button","Grid","Paper","Popover","Snackbar","Typography","React","useCallback","useEffect","useState","DndProvider","HTML5Backend","useAuth","createTask","deleteTask","getTasks","updateTask","DroppableTaskColumn","TaskColumn","TaskFilter","TaskForm","jsxDEV","_jsxDEV","TaskBoard","_s","logout","allTasks","setAllTasks","filters","setFilters","assignee","undefined","status","startDate","endDate","reminderDate","filteredTasks","setFilteredTasks","openTaskForm","setOpenTaskForm","taskColumns","setTaskColumns","tasks","openSnackbar","setOpenSnackbar","reminder","setReminder","checkReminderDates","now","Date","reminderTasks","filter","task","length","fetchTasks","error","console","filterTasks","updateColumnsTasks","prevColumns","map","column","handleOpenTaskForm","anchorEl","setAnchorEl","openPopover","Boolean","email","localStorage","getItem","handleDeleteTask","taskId","prevTasks","_id","handleAddTask","newTask","createdTask","handleUpdateTask","updatedTask","t","priority","dueDate","filtered","assigneeLowerCase","toLowerCase","trim","replace","taskAssignee","isAssigneeMatch","includes","isStatusMatch","isDueDateMatch","toDateString","isReminderDateMatch","isPriorityMatch","handleDrop","item","columnStatus","id","sourceStatus","onUpdateTask","newStatus","taskToUpdate","find","handlePersonIconClick","event","currentTarget","handlePopoverClose","handleSnackbarClose","reason","handleLogout","window","location","href","backend","children","style","minHeight","paddingTop","marginLeft","marginRight","paddingBottom","flexDirection","display","alignItems","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","backgroundColor","padding","borderRadius","fontSize","cursor","onClick","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","marginTop","p","variant","color","mt","boxShadow","border","paddingX","paddingY","flexWrap","onFilter","margin","onSubmit","container","spacing","xs","md","onDrop","bgcolor","onDeleteTask","autoHideDuration","severity","width","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/KanbanBoard/TaskBoard/src/components/TaskBoard.js"],"sourcesContent":["import { Login } from \"@mui/icons-material\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport {\r\n    Alert,\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    Paper,\r\n    Popover,\r\n    Snackbar,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\nimport { createTask, deleteTask, getTasks, updateTask } from \"../utils/api\"; // Import API functions\r\nimport DroppableTaskColumn from \"./DroppableTaskColumn\";\r\nimport TaskColumn from \"./TaskColumn\";\r\nimport TaskFilter from \"./TaskFilter\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nconst TaskBoard = () => {\r\n    const { logout } = useAuth();\r\n    const [allTasks, setAllTasks] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        assignee: undefined,\r\n        status: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        reminderDate: \"\",\r\n    });\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [openTaskForm, setOpenTaskForm] = useState(false);\r\n    const [taskColumns, setTaskColumns] = useState([\r\n        { status: \"To Do\", tasks: [] },\r\n        { status: \"In Progress\", tasks: [] },\r\n        { status: \"Peer Review\", tasks: [] },\r\n        { status: \"Done\", tasks: [] }\r\n    ]);\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const [reminder, setReminder] = useState(\"\");\r\n\r\n    const checkReminderDates = (tasks) => {\r\n        const now = new Date();\r\n        const reminderTasks = tasks.filter(\r\n            (task) => task.reminderDate && new Date(task.reminderDate) <= now\r\n        );\r\n\r\n        if (reminderTasks.length > 0) {\r\n            setOpenSnackbar(true);\r\n            setReminder(reminderTasks);\r\n        }\r\n    };\r\n\r\n    // Fetch tasks from API\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const tasks = await getTasks();\r\n                setAllTasks(tasks);\r\n                checkReminderDates(tasks);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch tasks:\", error);\r\n            }\r\n        };\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    // Update filtered tasks whenever all tasks or filters change\r\n    useEffect(() => {\r\n        filterTasks(filters);\r\n    }, [allTasks, filters]);\r\n\r\n    // Update task columns when filtered tasks change\r\n    useEffect(() => {\r\n        const updateColumnsTasks = () => {\r\n            setTaskColumns((prevColumns) =>\r\n                prevColumns.map((column) => ({\r\n                    ...column,\r\n                    tasks: filteredTasks.filter(\r\n                        (task) => task.status === column.status\r\n                    ),\r\n                }))\r\n            );\r\n        };\r\n        updateColumnsTasks();\r\n    }, [filteredTasks]);\r\n\r\n    const handleOpenTaskForm = () => {\r\n        setOpenTaskForm(true);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const openPopover = Boolean(anchorEl);\r\n    const email = localStorage.getItem(\"email\");\r\n\r\n    const handleDeleteTask = useCallback(async (taskId) => {\r\n        try {\r\n            await deleteTask(taskId);\r\n            setAllTasks((prevTasks) =>\r\n                prevTasks.filter((task) => task._id !== taskId)\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Failed to delete task:\", error);\r\n        }\r\n    }, []);\r\n\r\n    const handleAddTask = useCallback(async (newTask) => {\r\n        try {\r\n            const createdTask = await createTask(newTask);\r\n            setAllTasks((prevTasks) => [...prevTasks, createdTask]);\r\n        } catch (error) {\r\n            console.error(\"Failed to add task:\", error);\r\n        }\r\n    }, []);\r\n\r\n    const handleUpdateTask = useCallback(async (updatedTask) => {\r\n        try {\r\n            const task = await updateTask(updatedTask);\r\n            setAllTasks((prevTasks) =>\r\n                prevTasks.map((t) => (t._id === task._id ? task : t))\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Failed to update task:\", error);\r\n        }\r\n    }, []);\r\n\r\n    const filterTasks = useCallback(\r\n        (filters) => {\r\n            const { assignee, status, priority, dueDate, reminderDate } = filters;\r\n            const filtered = allTasks.filter((task) => {\r\n                const assigneeLowerCase = assignee\r\n                    ? assignee.toLowerCase().trim().replace(/\\s/g, \"\")\r\n                    : \"\";\r\n                const taskAssignee = task.assignee\r\n                    ? task.assignee.toLowerCase().trim().replace(/\\s/g, \"\")\r\n                    : \"\";\r\n                const isAssigneeMatch =\r\n                    !assignee || taskAssignee.includes(assigneeLowerCase);\r\n                const isStatusMatch =\r\n                    !status || task.status === status || status === \"All\";\r\n                const isDueDateMatch =\r\n                    !dueDate ||\r\n                    new Date(task.dueDate).toDateString() ===\r\n                        new Date(dueDate).toDateString();\r\n                const isReminderDateMatch =\r\n                    !reminderDate ||\r\n                    new Date(task.reminderDate).toDateString() ===\r\n                        new Date(reminderDate).toDateString();\r\n                const isPriorityMatch =\r\n                    !priority ||\r\n                    task.priority === priority ||\r\n                    priority === \"All\";\r\n\r\n                return (\r\n                    isAssigneeMatch &&\r\n                    isStatusMatch &&\r\n                    isPriorityMatch &&\r\n                    isDueDateMatch &&\r\n                    isReminderDateMatch\r\n                );\r\n            });\r\n            setFilteredTasks(filtered);\r\n            setFilters(filters);\r\n        },\r\n        [allTasks]\r\n    );\r\n\r\n    const handleDrop = (item, columnStatus) => {\r\n        const { id, sourceStatus } = item;\r\n\r\n        if (sourceStatus !== columnStatus) {\r\n            onUpdateTask(id, columnStatus);\r\n        }\r\n    };\r\n\r\n    const onUpdateTask = async (taskId, newStatus) => {\r\n        const tasks = await getTasks();\r\n        setAllTasks(tasks);\r\n        const taskToUpdate = tasks.find((task) => task._id === taskId);\r\n        if (taskToUpdate) {\r\n            handleUpdateTask({ ...taskToUpdate, status: newStatus });\r\n        }\r\n    };\r\n\r\n    const handlePersonIconClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        // Redirect to login page, assuming you're using React Router\r\n        window.location.href = \"/login\";\r\n    };\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <div\r\n                style={{\r\n                    minHeight: \"100vh\",\r\n                    paddingTop: \"2rem\",\r\n                    marginLeft: \"2rem\",\r\n                    marginRight: \"2rem\",\r\n                    paddingBottom: \"2rem\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        marginBottom: \"1rem\",\r\n                    }}\r\n                >\r\n                    <h1>Task Board</h1>\r\n                    <PersonIcon\r\n                        sx={{\r\n                            backgroundColor: \"whitesmoke\",\r\n                            padding: \"1rem\",\r\n                            borderRadius: \"50px\",\r\n                            fontSize: \"40px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                        onClick={handlePersonIconClick}\r\n                    />\r\n                    <Popover\r\n                        open={openPopover}\r\n                        anchorEl={anchorEl}\r\n                        onClose={handlePopoverClose}\r\n                        anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\",\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\",\r\n                        }}\r\n                        sx={{\r\n                            marginTop: \"0.3rem\",\r\n                        }}\r\n                    >\r\n                        <Box p={2}>\r\n                            <Typography variant=\"subtitle1\">{email}</Typography>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleLogout}\r\n                                sx={{ mt: 1 }}\r\n                            >\r\n                                Logout <Login />\r\n                            </Button>\r\n                        </Box>\r\n                    </Popover>\r\n                </div>\r\n                <Paper\r\n                    sx={{\r\n                        backgroundColor: \"#0000\",\r\n                        boxShadow: \"none\",\r\n                        border: \"1px solid #fff\",\r\n                        paddingX: \"2rem\",\r\n                        paddingY: \"2rem\",\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            flexDirection: \"row\",\r\n                            display: \"flex\",\r\n                            alignItems: \"flex-start\",\r\n                            justifyContent: \"space-between\",\r\n                            flexWrap: \"wrap\",\r\n                        }}\r\n                    >\r\n                        <TaskFilter onFilter={filterTasks} />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={handleOpenTaskForm}\r\n                            sx={{ margin: \"1rem\" }}\r\n                        >\r\n                            Add New Task\r\n                        </Button>\r\n                    </div>\r\n                    <TaskForm\r\n                        open={openTaskForm}\r\n                        onClose={() => setOpenTaskForm(false)}\r\n                        onSubmit={handleAddTask}\r\n                    />\r\n                    <Grid container spacing={2}>\r\n                        {taskColumns.map(({ status, tasks }) => (\r\n                            <Grid item xs={12} md={3} key={status}>\r\n                                <DroppableTaskColumn\r\n                                    status={status}\r\n                                    onDrop={handleDrop}\r\n                                    allTasks={allTasks}\r\n                                >\r\n                                    <TaskColumn\r\n                                        status={status}\r\n                                        bgcolor={\r\n                                            status === \"To Do\"\r\n                                                ? \"#D3D3D3\"\r\n                                                : status === \"In Progress\"\r\n                                                ? \"#fda63a\"\r\n                                                : status === \"Done\"\r\n                                                ? \"#74c365\"\r\n                                                : \"#f88379\"\r\n                                        }\r\n                                        tasks={tasks}\r\n                                        onUpdateTask={handleUpdateTask}\r\n                                        onDeleteTask={handleDeleteTask}\r\n                                    />\r\n                                </DroppableTaskColumn>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Paper>\r\n                <Snackbar\r\n                    open={openSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleSnackbarClose}\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackbarClose}\r\n                        severity=\"warning\"\r\n                        sx={{ width: \"100%\" }}\r\n                    >\r\n                        You have {reminder.length} tasks with upcoming reminders!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </DndProvider>\r\n    );\r\n};\r\n\r\nexport default TaskBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}