{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\KanbanBoard\\\\TaskBoard\\\\src\\\\components\\\\TaskColumn.js\",\n  _s = $RefreshSig$();\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport { Box, Button, Card, CardContent, Divider, MenuItem, Paper, Popover, Typography } from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport DeleteTask from \"./DeleteTask\";\nimport DraggableComponent from \"./DraggableComponent\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskColumn = ({\n  status,\n  tasks,\n  onUpdateTask,\n  bgcolor,\n  onDeleteTask\n}) => {\n  _s();\n  const handleStatusChange = (task, newStatus) => {\n    const updatedTask = {\n      ...task,\n      status: newStatus\n    };\n    onUpdateTask(updatedTask);\n  };\n  const [openDialog, setOpenDialog] = useState(false);\n  const handleDeleteClick = () => {\n    handleMenuClose();\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  const handleConfirmDelete = taskId => {\n    onDeleteTask(taskId); // Pass the task ID to the onDeleteTask callback function\n    setOpenDialog(false);\n  };\n  const [openTaskForm, setOpenTaskForm] = useState(false);\n  const handleOpenTaskForm = () => {\n    setOpenTaskForm(true);\n    handleMenuClose();\n  };\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    op = false;\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const year = date.getFullYear();\n    return `${day}-${month}-${year}`;\n  };\n  let op = Boolean(anchorEl); // Moved from top\n\n  const [selectedStatus, setSelectedStatus] = useState(status);\n  const anchorRef = useRef(null);\n  const [openStatusMenu, setOpenStatusMenu] = useState(false); // Rename open to avoid confusion\n\n  const handleClick = () => {\n    setOpenStatusMenu(true);\n  };\n  const handleClose = (newStatus, task) => {\n    if (newStatus) {\n      setSelectedStatus(newStatus);\n      handleStatusChange(task, newStatus); // Update first task for now (assuming single task per card)\n    }\n    setOpenStatusMenu(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-column\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        paddingBottom: \"1rem\",\n        borderRadius: \"4px\",\n        minHeight: \"30rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\",\n          backgroundColor: bgcolor,\n          paddingTop: \"0.5rem\",\n          paddingBottom: \"0.5rem\",\n          borderTopLeftRadius: \"3px\",\n          borderTopRightRadius: \"3px\",\n          color: \"#fff\"\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: \"1rem\",\n          paddingRight: \"1rem\"\n        },\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(DraggableComponent, {\n          id: task._id,\n          type: task.status,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              borderRadius: \"4px\",\n              mb: \"1rem\",\n              backgroundColor: \"#f5f5f5\",\n              zIndex: 1000\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"flex-start\",\n                  marginBottom: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"white\",\n                  sx: {\n                    backgroundColor: \"#1976d2\",\n                    padding: \"0.5em\",\n                    borderRadius: \"2.5px\"\n                  },\n                  children: task.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  marginY: \"1rem\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                sx: {\n                  marginY: \"1rem\"\n                },\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this), task.dueDate && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                sx: {\n                  marginY: \"1rem\"\n                },\n                children: [\"Due Date: \", formatDate(task.dueDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"flex-start\",\n                  marginY: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  sx: {\n                    fontWeight: \"bold\"\n                  },\n                  children: [\"@\", task.assignee]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  sx: {\n                    minWidth: \"0px\",\n                    padding: \"0.1rem\"\n                  },\n                  onClick: handleMenuClick,\n                  children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Popover, {\n                id: \"menu-popover\",\n                open: op,\n                anchorEl: anchorEl,\n                onClose: handleMenuClose,\n                anchorOrigin: {\n                  vertical: \"center\",\n                  horizontal: \"right\"\n                },\n                transformOrigin: {\n                  vertical: \"right\",\n                  horizontal: \"right\"\n                },\n                sx: {\n                  marginTop: \"0.3rem\",\n                  marginLeft: \"5.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleOpenTaskForm,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 41\n                }, this), status !== \"Done\" && /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleDeleteClick,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(DeleteTask, {\n                openDialog: openDialog,\n                handleCloseDialog: handleCloseDialog,\n                handleConfirmDelete: handleConfirmDelete,\n                taskId: task._id,\n                title: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n                open: openTaskForm,\n                onClose: () => setOpenTaskForm(false),\n                onUpdateTask: onUpdateTask,\n                initialTask: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: \"flex\",\n                  marginY: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  ref: anchorRef,\n                  variant: \"contained\",\n                  onClick: handleClick,\n                  children: task.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Popover, {\n                  anchorEl: anchorRef.current,\n                  open: openStatusMenu // Changed to openStatusMenu\n                  ,\n                  onClose: () => handleClose(selectedStatus, task) // Pass the selected status to handleClose\n                  ,\n                  anchorOrigin: {\n                    vertical: \"center\",\n                    horizontal: \"right\"\n                  },\n                  transformOrigin: {\n                    vertical: \"right\",\n                    horizontal: \"right\"\n                  },\n                  sx: {\n                    marginTop: \"2rem\",\n                    marginLeft: \"1.5rem\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: () => handleClose(\"To Do\", task),\n                    children: \"To Do\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: () => handleClose(\"In Progress\", task),\n                    children: \"In Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: () => handleClose(\"Done\", task),\n                    children: \"Done\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskColumn, \"0KR+pGnbnWk8Yqw6srvOcx6B5ko=\");\n_c = TaskColumn;\nexport default TaskColumn;\nvar _c;\n$RefreshReg$(_c, \"TaskColumn\");","map":{"version":3,"names":["MoreVertIcon","Box","Button","Card","CardContent","Divider","MenuItem","Paper","Popover","Typography","React","useRef","useState","DeleteTask","DraggableComponent","TaskForm","jsxDEV","_jsxDEV","TaskColumn","status","tasks","onUpdateTask","bgcolor","onDeleteTask","_s","handleStatusChange","task","newStatus","updatedTask","openDialog","setOpenDialog","handleDeleteClick","handleMenuClose","handleCloseDialog","handleConfirmDelete","taskId","openTaskForm","setOpenTaskForm","handleOpenTaskForm","anchorEl","setAnchorEl","handleMenuClick","event","currentTarget","op","formatDate","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","Boolean","selectedStatus","setSelectedStatus","anchorRef","openStatusMenu","setOpenStatusMenu","handleClick","handleClose","className","children","sx","paddingBottom","borderRadius","minHeight","style","textAlign","backgroundColor","paddingTop","borderTopLeftRadius","borderTopRightRadius","color","fileName","_jsxFileName","lineNumber","columnNumber","paddingLeft","paddingRight","map","id","_id","type","mb","zIndex","display","flexDirection","justifyContent","alignItems","marginBottom","variant","component","title","padding","priority","marginY","description","dueDate","fontWeight","assignee","minWidth","onClick","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","marginTop","marginLeft","initialTask","ref","current","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/KanbanBoard/TaskBoard/src/components/TaskColumn.js"],"sourcesContent":["import MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    MenuItem,\r\n    Paper,\r\n    Popover,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport DeleteTask from \"./DeleteTask\";\r\nimport DraggableComponent from \"./DraggableComponent\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nconst TaskColumn = ({ status, tasks, onUpdateTask, bgcolor, onDeleteTask }) => {\r\n    const handleStatusChange = (task, newStatus) => {\r\n        const updatedTask = { ...task, status: newStatus };\r\n        onUpdateTask(updatedTask);\r\n    };\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleDeleteClick = () => {\r\n        handleMenuClose();\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleConfirmDelete = (taskId) => {\r\n        onDeleteTask(taskId); // Pass the task ID to the onDeleteTask callback function\r\n        setOpenDialog(false);\r\n    };\r\n    const [openTaskForm, setOpenTaskForm] = useState(false);\r\n\r\n    const handleOpenTaskForm = () => {\r\n        setOpenTaskForm(true);\r\n        handleMenuClose();\r\n    };\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        op = false;\r\n    };\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const day = String(date.getDate()).padStart(2, \"0\");\r\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n        const year = date.getFullYear();\r\n        return `${day}-${month}-${year}`;\r\n    };\r\n    let op = Boolean(anchorEl); // Moved from top\r\n\r\n    const [selectedStatus, setSelectedStatus] = useState(status);\r\n    const anchorRef = useRef(null);\r\n    const [openStatusMenu, setOpenStatusMenu] = useState(false); // Rename open to avoid confusion\r\n\r\n    const handleClick = () => {\r\n        setOpenStatusMenu(true);\r\n    };\r\n\r\n    const handleClose = (newStatus, task) => {\r\n        if (newStatus) {\r\n            setSelectedStatus(newStatus);\r\n            handleStatusChange(task, newStatus); // Update first task for now (assuming single task per card)\r\n        }\r\n        setOpenStatusMenu(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"task-column\">\r\n            <Paper\r\n                sx={{\r\n                    paddingBottom: \"1rem\",\r\n                    borderRadius: \"4px\",\r\n                    minHeight: \"30rem\",\r\n                }}\r\n            >\r\n                {/* Background with styling */}\r\n                <h3\r\n                    style={{\r\n                        textAlign: \"center\",\r\n                        backgroundColor: bgcolor,\r\n                        paddingTop: \"0.5rem\",\r\n                        paddingBottom: \"0.5rem\",\r\n                        borderTopLeftRadius: \"3px\",\r\n                        borderTopRightRadius: \"3px\",\r\n                        color: \"#fff\",\r\n                    }}\r\n                >\r\n                    {status}\r\n                </h3>\r\n                <div style={{ paddingLeft: \"1rem\", paddingRight: \"1rem\" }}>\r\n                    {tasks.map((task) => (\r\n                        <DraggableComponent\r\n                            key={task._id}\r\n                            id={task._id}\r\n                            type={task.status}\r\n                        >\r\n                            <Card\r\n                                key={task.id}\r\n                                sx={{\r\n                                    borderRadius: \"4px\",\r\n                                    mb: \"1rem\",\r\n                                    backgroundColor: \"#f5f5f5\",\r\n                                    zIndex: 1000,\r\n                                }}\r\n                            >\r\n                                <CardContent>\r\n                                    {/* Other card content */}\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            flexDirection: \"row\",\r\n                                            justifyContent: \"space-between\",\r\n                                            alignItems: \"flex-start\",\r\n                                            marginBottom: \"1rem\",\r\n                                        }}\r\n                                    >\r\n                                        <Typography\r\n                                            variant=\"body1\"\r\n                                            component=\"div\"\r\n                                        >\r\n                                            {task.title}\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            color=\"white\"\r\n                                            sx={{\r\n                                                backgroundColor: \"#1976d2\",\r\n                                                padding: \"0.5em\",\r\n                                                borderRadius: \"2.5px\",\r\n                                            }}\r\n                                        >\r\n                                            {task.priority}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <Divider sx={{ marginY: \"1rem\" }} />\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        color=\"textSecondary\"\r\n                                        sx={{ marginY: \"1rem\" }}\r\n                                    >\r\n                                        {task.description}\r\n                                    </Typography>\r\n                                    {task.dueDate && (\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            color=\"textSecondary\"\r\n                                            sx={{ marginY: \"1rem\" }}\r\n                                        >\r\n                                            Due Date: {formatDate(task.dueDate)}\r\n                                        </Typography>\r\n                                    )}\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            flexDirection: \"row\",\r\n                                            justifyContent: \"space-between\",\r\n                                            alignItems: \"flex-start\",\r\n                                            marginY: \"1rem\",\r\n                                        }}\r\n                                    >\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            color=\"textSecondary\"\r\n                                            sx={{ fontWeight: \"bold\" }}\r\n                                        >\r\n                                            @{task.assignee}\r\n                                        </Typography>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            sx={{\r\n                                                minWidth: \"0px\",\r\n                                                padding: \"0.1rem\",\r\n                                            }}\r\n                                            onClick={handleMenuClick}\r\n                                        >\r\n                                            <MoreVertIcon />\r\n                                        </Button>\r\n                                    </div>\r\n                                    <Popover\r\n                                        id=\"menu-popover\"\r\n                                        open={op}\r\n                                        anchorEl={anchorEl}\r\n                                        onClose={handleMenuClose}\r\n                                        anchorOrigin={{\r\n                                            vertical: \"center\",\r\n                                            horizontal: \"right\",\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: \"right\",\r\n                                            horizontal: \"right\",\r\n                                        }}\r\n                                        sx={{\r\n                                            marginTop: \"0.3rem\",\r\n                                            marginLeft: \"5.5rem\",\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem onClick={handleOpenTaskForm}>\r\n                                            Edit\r\n                                        </MenuItem>\r\n                                        {status !== \"Done\" && (\r\n                                            <MenuItem\r\n                                                onClick={handleDeleteClick}\r\n                                            >\r\n                                                Delete\r\n                                            </MenuItem>\r\n                                        )}\r\n                                    </Popover>\r\n                                    <DeleteTask\r\n                                        openDialog={openDialog}\r\n                                        handleCloseDialog={handleCloseDialog}\r\n                                        handleConfirmDelete={\r\n                                            handleConfirmDelete\r\n                                        }\r\n                                        taskId={task._id}\r\n                                        title={task.title}\r\n                                    />\r\n                                    <TaskForm\r\n                                        open={openTaskForm}\r\n                                        onClose={() => setOpenTaskForm(false)}\r\n                                        onUpdateTask={onUpdateTask}\r\n                                        initialTask={task}\r\n                                    />\r\n                                    <Box\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            marginY: \"1rem\",\r\n                                        }}\r\n                                    >\r\n                                        <Button\r\n                                            ref={anchorRef}\r\n                                            variant=\"contained\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            {task.status}\r\n                                        </Button>\r\n                                        <Popover\r\n                                            anchorEl={anchorRef.current}\r\n                                            open={openStatusMenu} // Changed to openStatusMenu\r\n                                            onClose={() =>\r\n                                                handleClose(\r\n                                                    selectedStatus,\r\n                                                    task\r\n                                                )\r\n                                            } // Pass the selected status to handleClose\r\n                                            anchorOrigin={{\r\n                                                vertical: \"center\",\r\n                                                horizontal: \"right\",\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: \"right\",\r\n                                                horizontal: \"right\",\r\n                                            }}\r\n                                            sx={{\r\n                                                marginTop: \"2rem\",\r\n                                                marginLeft: \"1.5rem\",\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem\r\n                                                onClick={() =>\r\n                                                    handleClose(\"To Do\", task)\r\n                                                }\r\n                                            >\r\n                                                To Do\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={() =>\r\n                                                    handleClose(\r\n                                                        \"In Progress\",\r\n                                                        task\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                In Progress\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={() =>\r\n                                                    handleClose(\"Done\", task)\r\n                                                }\r\n                                            >\r\n                                                Done\r\n                                            </MenuItem>\r\n                                        </Popover>\r\n                                    </Box>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </DraggableComponent>\r\n                    ))}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskColumn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}